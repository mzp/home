# -*- sh -*-
stty stop undef
# --------------------------------------------------
# オプション
# --------------------------------------------------
setopt AutoCD
setopt Correct dvorak
setopt clobber
setopt NoRmStarSilent
setopt AutoPushD
setopt NoListBeep
setopt extended_glob
bindkey -e

# 履歴
HISTSIZE=1000000
SAVEHIST=1000000
HISTFILE=~/.zhistory
setopt extended_history
setopt share_history
function history-all { history -E l }

# z.sh
_Z_CMD=j
source ~/home/zsh/z.sh

# 補完
fpath=(~/home/zsh $fpath)

autoload -U ~/home/zsh/*(:t)
autoload -U compinit
compinit -u

zmodload -i zsh/complist
zstyle ':completion:*' list-colors 'no=0' 'di=01;33'

zstyle ':completion:*' hosts \
    proofcafe.org \
    dev.codefirst.org \
    codefirst.org

# --------------------------------------------------
# 補完リストを詳しくする
# --------------------------------------------------
zstyle ':completion:*' use-cache true
zstyle ':completion:*:descriptions' format '%B%d%b'
zstyle ':completion:*' list-separator '#'
zstyle ':completion:*:default' menu select=1

compdef _nothing svn_list

# --------------------------------------------------
# ターミナルの性能を調べる
# --------------------------------------------------
color_t=true
if [[ $TERM != 'dumb' ]]; then
    color_t=true
fi

# --------------------------------------------------
# プロンプト。色用のエスケープシーケンスが使えないものもある
# ref:http://zsh.dotsrc.org/Doc/Release/zsh_12.html
# --------------------------------------------------
setopt prompt_subst

ret_code='%(?..ret:%? )'
machine='$(whoami)@%m '
time='%* '
prompt='$ '

if [[ $color_t == 'true' ]] then
    # たぶん使える
    autoload -U colors
    colors
    ret_code="%{$fg[red]%}$ret_code%{$fg[default]%}"
    machine="%{$fg[cyan]%}$machine%{$fg[default]%}"
    time="%{$fg[yellow]%}$time%{$fg[default]%}"
    prompt="%{$fg[cyan]%}$prompt%{$fg[default]%}"
    branch="%{$fg[green]%}%1v%{$fg[default]%}"
    RPROMPT="%{${fg[green]}%}[%~]%{$fg[default]%}"
fi

# --------------------------------------------------
# git
# --------------------------------------------------
if [[ $ZSH_VERSION == * ]]; then
    autoload -Uz vcs_info
    zstyle ':vcs_info:*' formats '%b'
    zstyle ':vcs_info:*' actionformats '(%s)-[%b|%a]'
    precmd () {
	psvar=()
	LANG=en_US.UTF-8 vcs_info
	[[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_ "
        _z --add "$(pwd -P)"
    }
fi

PROMPT="$machine$ret_code$info$branch$prompt"

# --------------------------------------------------
# alias
# --------------------------------------------------
alias la='ls -al'
alias ll='ls -l'
alias ls='ls -F'
alias w3m='noglob w3m -B'

alias reload='source ~/.zshrc; rehash'
alias pd="popd"
alias wget="noglob wget"

# typo
alias eamcs='emacs'
alias まけ='make'
alias おまけ='omake'
alias 。。='..'
alias だて='date'

if [[ $color_t = 'true' ]]; then
    alias ls='ls -vCGF'
    export LSCOLORS='dxfxcxdxbxegedabagacad'
    export LS_COLORS='no=00:fi=00:di=01;33:ln=01;3'
fi

case $(uname) in
Darwin)
  ;;
Linux)
  alias ls='ls --color'
  ;;
esac


# --------------------------------------------------
# 環境変数
# --------------------------------------------------
export LANG='ja_JP.UTF-8'
export EDITOR="vim"
path=(~/bin ~/Dropbox/home/bin /opt/local/bin /usr/local/bin /usr/bin /bin /sbin /usr/X11R6/bin $path)
manpath=(/opt/local/man $manpath)

function rename(){
  if which tmux > /dev/null; then
    tmux rename-window $1
  fi
}

# Screen用
if [[ $TERM = 'screen-256color' ]]; then
    function preexec(){
      emulate -L zsh
      local -a cmd
      cmd=(${(s. .)${argv[1]}})

      case $cmd[1] in
        (ssh|ftp|sftp|scp)
          rename $cmd[2]
          ;;
        (w3m|emacs|vim|irssi|mutt|aptitude|omake|mongod)
          rename $cmd[1]
          ;;
      esac
    }

    function chpwd(){
      emulate -L zsh
      local dir
      dir=$(pwd | perl -ne 's#$ENV{"HOME"}#\~#g; ($x,@xs) = reverse split "/"; print map {substr($_,0,1) . "/" } reverse @xs;print $x;')
      rename "$dir"
      ls
    }
fi

# --------------------------------------------------
# Startup
# --------------------------------------------------
if [[ $SSH_AGENT_PID == '' ]]; then
    # enable ssh-agent
    eval $(ssh-agent)
    ssh-add
fi

if [[ $TERM != 'screen-256color' ]]; then
    tmux attach || tmux -2
fi

# --------------------------------------------------
# local profile
# --------------------------------------------------
if [ -f "$HOME/.zshrc_local" ]; then
  . "$HOME/.zshrc_local"
fi

if [ -d ~/profiles ]; then
  for i in ~/profiles/*.profile; do
    source $i
  done
fi
